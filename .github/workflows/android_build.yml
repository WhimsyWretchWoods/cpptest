name: Android CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Decode Keystore
        run: echo "${{ secrets.ANDROID_RELEASE_KEYSTORE_BASE64 }}" | base64 --decode > app/release-key.jks

      - name: Create Keystore Properties
        run: |
          echo "storeFile=release-key.jks" > app/keystore.properties
          echo "storePassword=${{ secrets.ANDROID_STORE_PASSWORD }}" >> app/keystore.properties
          echo "keyAlias=${{ secrets.ANDROID_KEY_ALIAS }}" >> app/keystore.properties
          echo "keyPassword=${{ secrets.ANDROID_KEY_PASSWORD }}" >> app/keystore.properties

      - name: Create empty proguard-rules.pro
        run: touch app/proguard-rules.pro
        
      - name: Cache Android SDK
        uses: actions/cache@v4
        with:
          path: ${{ env.ANDROID_HOME }}
          key: ${{ runner.os }}-android-sdk-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-android-sdk-

        
      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Install NDK
        run: sdkmanager --install "ndk;25.2.9519653"

      - name: Set NDK path
        run: |
          echo "ndk.dir=$ANDROID_SDK_ROOT/ndk/25.2.9519653" >> local.properties

      - name: Build release APK
        run: ./gradlew assembleRelease --warning-mode all
        env:
          ORG_GRADLE_PROJECT_storeFile: app/release-key.jks
          ORG_GRADLE_PROJECT_storePassword: ${{ secrets.ANDROID_STORE_PASSWORD }}
          ORG_GRADLE_PROJECT_keyAlias: ${{ secrets.ANDROID_KEY_ALIAS }}
          ORG_GRADLE_PROJECT_keyPassword: ${{ secrets.ANDROID_KEY_PASSWORD }}

      - name: Find generated APK
        run: find app/build/outputs/apk/release -name "*.apk" -print

      - name: Upload release APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-apk
          path: app/build/outputs/apk/release/app-release.apk
